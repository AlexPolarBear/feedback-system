Рекомендательные системы и ранжирование
Что было бы хорошо знать перед началом курса:
- Основы ML
- Умение писать и читать код на питоне
Темы курса
1. Введение
a. Где и как в индустрии решают задачу рекомендаций, и какую пользу это
приносит
b. Постановка задачи рекомендаций и ранжирования с точки зрения
математики
c. Какие бывают данные для обучения: explicit & implicit feedback,
дополнительные данные
d. Как понять, что модель хорошая? Онлайн и оффлайн метрики оценки
качества моделей
i. Precision, Recall, ROC-AUC, NDCG, Hit Rate
e. Стратегии валидации моделей
2. Коллаборативные модели
a. UserKNN, ItemKNN
b. ALS, SVD++, FunkSVD
c. Factorization Machines, Field-Aware Factorization Machines
d. Bayesian Personalized Ranking (BPR), Weighted approximately ranked
pairwise loss (WARP), k-OS WARP
e. Graph-based models: P3-alpha, RP3-beta
f. Neural networks models: Item2Vec, DSSM, NeuMF
3. Контентные модели (короткий обзор, основные идеи, несколько примеров)
4. Задача ранжирования
a. Разметка данных для ранжирования, отличие и схожесть с задачей
рекомендаций
b. Pointwise, pairwise, listwise подходы к задаче ранжирования
c. RankNet
d. LambdaRank, LambdaMART
5. Как это все работает в индустрии? Несколько примеров архитектур реальных
сервисов
6. Актуальные проблемы в области
a. Холодный старт
b. Filter bubble: разнообразие в рекомендациях
c. Reinforcement learning
Примеры домашних заданий:
1. Реализовать метрики оценки качества моделей и написать на них юнит-тесты
2. Реализовать ALS с использованием numpy
3. Реализовать Factorization Machines с использованием numpy
4. Реализовать BPR с использованием numpy
Финальный проект: соревнование на kaggle, в рамках которого нужно будет
построить самую точную модель для заданного датасета.