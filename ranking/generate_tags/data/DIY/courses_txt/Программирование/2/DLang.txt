
D (https://dlang.org) -- язык программирования общего назначения.
Появился в 2001 году как альтернатива C++.
Практический подход сочетает удобство при написании и поддержке программ
со скоростью выполнения на уровне того же C++.

Изучение разных языков программирования позволяет
каждый раз по-новому взглянуть на написание кода.
После изучения D студенты:
* будут уверенно ориентироваться в метапрограммировании и шаблонах,
* смогут осознанно выбирать между функциональной и императивной парадигмой,
* станут лучше понимать, почему языки программирования устроены именно так.
Полученные знания и навыки позволят не только писать программы на D,
но и улучшить свой код на других распространённых языках.

Примерный план:

* Введение. Общий синтаксис.

* Обзор компиляторов: DMD (оригинал), GDC (GCC backend), LDC (LLVM backend).

* Встроенные типы данных. Массив и срез. Ассоциативный массив.

* Менеджмент памяти. Сборщик мусора и ручное управление памятью.

* Диапазоны (ranges) как основа стандартной библиотеки.
Сравнение с итераторами.

* Функциональное программирование в D. Чистые в слабом смысле функции.

* Шаблоны. Работа во время компиляции и работа во время выполнения.
Метапрограммирование.

* Программа как цепочка преобразований над входными данными. UFCS.

* Пользовательские типы данных. Разница между class и struct.
Переопределение операторов, mixin-ы.

* Работа со строками. Unicode.

* Безопасный код. Изменяемость. Контрактное программирование. Юнит-тесты.

* Многопоточность.
DLang.txt
DLang.txt. На экране.